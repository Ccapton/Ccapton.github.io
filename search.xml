<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Android自定义View之-ColorfulSeekbar]]></title>
    <url>%2F2017%2F08%2F18%2FAndroid%E8%87%AA%E5%AE%9A%E4%B9%89View%E4%B9%8B-ColorfulSeekbar%2F</url>
    <content type="text"><![CDATA[Android-ColorfulSeekbar 关于我，欢迎关注 博客：ccapton(http://blog.csdn.net/ccapton) 微信：Ccapton Github: (https://www.github.com/ccapton) ColorfulSeekbar这个控件是我根据前作ColorfulProgressbar https://github.com/Ccapton/Android-ColorfulProgressBar变化而来的，进度条与之相比没有变化，功能与原生Seekbar没差别。 具体用法与ColorfulProgressbar类似，这里不再赘述。 demo下载： https://raw.githubusercontent.com/Ccapton/Android-ColorfulSeekbar/master/ColorfulSeekbarDemo.apk 如何配置build.gradle(Project) allprojects { repositories { ... maven { url 'https://jitpack.io' } } } build.gradle(Module:app) dependencies { compile 'com.github.Ccapton:Android-ColorfulSeekbar:1.0' }]]></content>
      <categories>
        <category>Android开发</category>
      </categories>
      <tags>
        <tag>Android开发</tag>
        <tag>Android</tag>
        <tag>自定义View</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android自定义View之-ColorfulProgressbar]]></title>
    <url>%2F2017%2F08%2F14%2FAndroid%E8%87%AA%E5%AE%9A%E4%B9%89View%E4%B9%8B-ColorfulProgressbar%2F</url>
    <content type="text"><![CDATA[Android-ColorfulProgressBar 关于我，欢迎关注 博客：ccapton(http://blog.csdn.net/ccapton) 微信：Ccapton Github: (https://www.github.com/ccapton) 简介:这是一个自定义的Progressbar，效果看着还行吧，滚动的双色斜条作为进度条，有点类似Bootstrap风格。原生Progress的基本操作都有，自行观摩我的源码吧，挺简单的。 示例: 演示Demo当前是修改了视图的版本，如下图所示，第二进度条似乎更加立体了，它像是被镶嵌在了主控件中 demo下载：https://github.com/Ccapton/Android-ColorfulProgressBar/blob/master/ColorfulProgressBarDemo_1_0_3.apk 特性与原生Progress相比，感觉更漂亮一点，可以显示进度值，背景凹凸感明显，进度条效果更加立体。 原理说明额，挺简单的。不过感觉我的做法有点复杂了，我先自定义了一个View，专门作为进度条的显示图层,如下所示 然后将其布局在高度不超过20dp的ColorfulProgressBar父布局中，设置Y方向的偏移量，然后动画循环改变Y坐标，实现斜条滚动的动画效果，当你调用setProgress方法时，则改变其在父布局的X坐标实现进度显示的功能，进度文字同样原理添加到了父布局中。 如何配置build.gradle(Project) allprojects { repositories { ... maven { url 'https://jitpack.io' } } } build.gradle(Module:app) dependencies { compile 'com.github.Ccapton:Android-ColorfulProgressBar:1.0.5' } 主要方法 setStyle(String style) // ColofulProgressBar.STYLE_NORMAL、 ColofulProgressBar.STYLE_COLORFUL两种风格 setMaxProgress(long maxProgress) // 设置进度最大值 setProgress(long progress); //设置当前进度 setSecondProgress(long secondProgress); //设置第二进度 setAnimation(false); // 关闭动画 showPercentText(false); //隐藏进度文字 setHeight(int height); // 设置整个控件高度 setWidth(int width); // 设置整个控件宽度 setProgressColorRes(int progressColorRes); // 设置进度条颜色一 setProgressColor2Res(int progressColor2Res) // 设置进度条颜色二 setPercentColorRes(int percentColorRes); //设置进度文字的颜色 setPercentShaderColorRes(int percentShadeColorRes); //设置进度文字的阴影颜色 setBackgroundColorRes(int backgroundColorRes) //设置控件背景色 使用方法例：在activity_main.xml中， 这是普通效果的Progressbar &lt;com.capton.colorfulprogressbar.ColorfulProgressbar android:id="@+id/colorfulProgressbar" xmlns:app="http://schemas.android.com/apk/res-auto" app:style="@string/style_normal" app:max="100" app:progress="50" app:secondProgress="10" app:progressColor1="@color/green" android:layout_marginTop="16dp" android:layout_width="match_parent" android:layout_height="wrap_content" > 这是双色的Progressbar &lt;com.capton.colorfulprogressbar.ColorfulProgressbar android:id="@+id/colorfulProgressbar2" xmlns:app="http://schemas.android.com/apk/res-auto" app:style="@string/style_colorful" app:max="100" app:progress="50" app:secondProgress="10" app:progressColor1="@color/green" app:progressColor2="@color/orange" android:layout_marginTop="16dp" android:layout_width="match_parent" android:layout_height="wrap_content" > 例：在MainActivity中 ColorfulProgressbar progressbar; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); progressbar= (ColorfulProgressbar) findViewById(R.id.colorfulProgressbar); progressbar.setMaxProgress(100); progressbar.setProgress(50); // progressbar.setSecondProgress(10); // progressbar.setAnimation(false); 关闭动画 // progressbar.showPercentText(false); 隐藏进度文字 } 作者的话 挺漂亮的ProgressBar，就是没啥技术含量。。。。具体需求大家自己随便研究琢磨]]></content>
      <categories>
        <category>Android开发</category>
      </categories>
      <tags>
        <tag>Android开发</tag>
        <tag>Android</tag>
        <tag>自定义View</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[软件分享-（Mac端）IntelliJ_IDEA_2017破解版]]></title>
    <url>%2F2017%2F05%2F10%2F%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB-%EF%BC%88Mac%E7%AB%AF%EF%BC%89IntelliJ-IDEA-2017%E7%A0%B4%E8%A7%A3%E7%89%88%2F</url>
    <content type="text"><![CDATA[下载IntelliJ IDEA 2017与JetbrainsCrack-2.6.2.jarJetbrainsCrack-2.6.2.jar 链接:http://pan.baidu.com/s/1eRJkOcq 密码:a4ji IntelliJ IDEA 2017版本 链接:http://pan.baidu.com/s/1kVHoZ5t 密码:weu3 找到IntelliJ IDEA，右键显示包内容，将JetbrainsCrack-2.6.2.jar复制到Contents/bin目录下 继续打开Contents/bin目录下目录下idea.vmoptions文件，在文件末尾追加上：-javaagent:JetbrainsCrack-2.6.2.jar 打开运行IntelliJ IDEA，Help-&gt;Register输入一下Code即可激活。{ "licenseId": "ThisCrackLicenseId", "licenseeName": "你的名字", "assigneeName": "", "assigneeEmail": "你的邮箱", "licenseRestriction": "Only Test! Please support genuine!!!", "checkConcurrentUse": false, "products": [ { "code": "II", "paidUpTo": "2099-12-31" }, { "code": "DM", "paidUpTo": "2099-12-31" }, { "code": "AC", "paidUpTo": "2099-12-31" }, { "code": "RS0", "paidUpTo": "2099-12-31" }, { "code": "WS", "paidUpTo": "2099-12-31" }, { "code": "DPN", "paidUpTo": "2099-12-31" }, { "code": "RC", "paidUpTo": "2099-12-31" }, { "code": "PS", "paidUpTo": "2099-12-31" }, { "code": "DC", "paidUpTo": "2099-12-31" }, { "code": "RM", "paidUpTo": "2099-12-31" }, { "code": "CL", "paidUpTo": "2099-12-31" }, { "code": "PC", "paidUpTo": "2099-12-31" } ], "hash": "2911276/0", "gracePeriodDays": 7, "autoProlongated": false } 原文链接：http://blog.csdn.net/zhangyong125/article/details/72804282]]></content>
      <categories>
        <category>软件分享</category>
      </categories>
      <tags>
        <tag>软件分享</tag>
        <tag>IntelliJ IDEA_2017</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人开发应用《纯粹菜谱》]]></title>
    <url>%2F2017%2F02%2F18%2FPureCooking%2F</url>
    <content type="text"><![CDATA[概况应用下载页 http://www.anzhi.com/soft_2761007.html 直接扫码下载apk 《纯粹菜谱》是我本着练习异步网络请求，数据解析、数据库操作和云后端Bmob的第一个应用。菜谱数据来自聚合数据（已认证本应用）。 应用介绍这是一款提供各式菜肴做法的app，菜谱五花八门，你想得到的菜肴都可通过关键词搜索到。目前只支持QQ认证登录（QQ空间分享），本来想做微信和微博分享的，但是后来我的电脑不小心卡机了，这个应用的源代码都丢失了，也就懒得去弄了。 开发历程由于是第一个Android项目，并没有用到很多第三方库和框架，所以有很多不成熟和冗余的代码。开发过程中，让我受益最多的是，通过自己的代码实践做到了自己想要的效果，例如在Fragment中添加多个子Fragment，并实现父子Fragment的数据通信。还有就是明白了Android应用上市所经历的各个步骤和细节，毕竟一步一个脚印走了过来，途中的艰辛我相信只有与我志同道合有相同经历的朋友才明白。 作者的话希望看到我这片文章的朋友能对我这个纯粹菜谱给些意见，谢谢了]]></content>
      <categories>
        <category>Android个人作品</category>
      </categories>
      <tags>
        <tag>Android开发</tag>
        <tag>Android应用</tag>
        <tag>个人作品</tag>
        <tag>纯粹菜谱</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[软件分享-（Mac端）DiskKeeper_Pro破解版]]></title>
    <url>%2F2016%2F09%2F10%2F%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB-%EF%BC%88Mac%E7%AB%AF%EF%BC%89DiskKeeper-Pro%E7%A0%B4%E8%A7%A3%E7%89%88%2F</url>
    <content type="text"><![CDATA[下载链接 https://github.com/Ccapton/EasyPlayer/blob/master/files/DiskKeeper.Pro_1.4.13_20170122.dmg DiskKeeper Pro for mac是Mac平台上的一款磁盘碎片整理软件，Diskeeper Pro for mac只要达到预设的垃圾文件的数值就会触发自动清理功能，不会让用户再时常担心磁盘的垃圾问题。提高用户体验度。 功能特点 从菜单栏启动快速清洗 应用缓存和垃圾数据 浏览器缓存和垃圾（Safari，Firefox，Chrome） 用户日志（保持您的保护和垃圾免费） 电子邮件缓存 垃圾箱 其他功能 DiskKeeper Pro有一个可选的自动清理功能，每次达到预设的垃圾邮件大小阈值时都会触发。还支持可选的通知中心报告，通知您已自动清除的垃圾的大小。 高级但易于使用的集成卸载程序。只需删除或移动应用程序到垃圾桶和DiskKeeper Pro将完全卸载它，删除所有剩菜。 DiskKeeper Pro有一个特殊的“保持我清洁”模式。在这种模式下，它将保留在您的菜单栏，准备删除任何种类的快速清洁垃圾。最先进的先进清洁剂，拥有惊人的用户体验。]]></content>
      <categories>
        <category>软件分享</category>
      </categories>
      <tags>
        <tag>软件分享</tag>
        <tag>DiskKeeper Pro</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android技术]]></title>
    <url>%2F2016%2F06%2F18%2FAndroid%E6%8A%80%E6%9C%AF%2F</url>
    <content type="text"><![CDATA[这是新的篇章，敬请期待]]></content>
      <categories>
        <category>Android开发</category>
      </categories>
      <tags>
        <tag>Android开发</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[分类]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[标签]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[关于]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[这是我的个人博客站，上传一些自己写的android代码和技术文章。偶尔分享一些好用的软件，好听的音乐]]></content>
  </entry>
</search>
